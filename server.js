const express = require('express');
const cors = require('cors');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors({
  origin: process.env.CORS_ORIGIN || '*',
  credentials: true
}));
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AdminJS
async function initializeAdminJS() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞—á–∞–ª–∞
    const { initializeDatabase } = require('./models/sequelize');
    await initializeDatabase();
    
    // –ó–∞—Ç–µ–º –ø–æ–¥–∫–ª—é—á–∞–µ–º AdminJS
    const { admin, adminRouter } = require('./admin/admin');
    app.use(admin.options.rootPath, adminRouter);
    console.log(`üìä AdminJS —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω: http://localhost:${PORT}${admin.options.rootPath}`);
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AdminJS:', error.message);
    console.log('‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É –±–µ–∑ AdminJS');
    return false;
  }
}

// –ü–æ–¥–∫–ª—é—á–∞–µ–º API –º–∞—Ä—à—Ä—É—Ç—ã
const postsRoutes = require('./routes/posts');
const contactRoutes = require('./routes/contact');

app.use('/api/posts', postsRoutes);
app.use('/api/contact', contactRoutes);

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API
app.get('/', (req, res) => {
  res.json({
    message: 'AIronLab Blog API',
    version: '1.0.0',
    endpoints: {
      posts: '/api/posts',
      contact: '/api/contact',
      admin: '/admin'
    },
    documentation: {
      admin_panel: `${req.protocol}://${req.get('host')}/admin`,
      api_posts: `${req.protocol}://${req.get('host')}/api/posts`,
      api_contact: `${req.protocol}://${req.get('host')}/api/contact`
    }
  });
});

// –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ (–µ—Å–ª–∏ AdminJS –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è)
app.get('/admin', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>–ê–¥–º–∏–Ω–∫–∞ AIronLab</title>
      <style>
        body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; margin: 0; padding: 40px; background: #f5f5f5; }
        .container { max-width: 600px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #1f2937; margin-bottom: 20px; }
        .status { padding: 20px; border-radius: 6px; margin: 20px 0; }
        .loading { background: #fef3c7; color: #92400e; }
        .error { background: #fef2f2; color: #991b1b; }
        .success { background: #f0fdf4; color: #166534; }
        .btn { display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
        .btn:hover { background: #2563eb; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>–ê–¥–º–∏–Ω–∫–∞ AIronLab</h1>
        <div class="loading">
          <strong>–ó–∞–≥—Ä—É–∑–∫–∞ AdminJS...</strong><br>
          –ï—Å–ª–∏ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.
        </div>
        
        <div style="margin-top: 30px;">
          <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h3>
          <a href="/api/posts" class="btn">–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–µ–π (API)</a><br>
          <a href="/api/contact" class="btn">–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ (API)</a><br>
          <a href="/" class="btn">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API</a>
        </div>
        
        <div style="margin-top: 30px; font-size: 14px; color: #6b7280;">
          <strong>–ï—Å–ª–∏ AdminJS –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è:</strong><br>
          1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ<br>
          2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã<br>
          3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
        </div>
      </div>
      
      <script>
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          location.reload();
        }, 5000);
      </script>
    </body>
    </html>
  `);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
  console.error('Server Error:', error);
  res.status(500).json({
    success: false,
    error: process.env.NODE_ENV === 'development' ? error.message : 'Internal Server Error'
  });
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use((req, res) => {
  res.status(404).json({
    success: false,
    error: 'Route not found'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
  // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
  app.listen(PORT, async () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üåê API –¥–æ—Å—Ç—É–ø–Ω–æ: http://localhost:${PORT}/api`);
    console.log(`üìù –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
    
    // –ó–∞—Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AdminJS
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AdminJS...');
    const adminInitialized = await initializeAdminJS();
    
    if (adminInitialized) {
      console.log(`‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!`);
    } else {
      console.log(`‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ AdminJS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
      console.log(`üìä –í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞: http://localhost:${PORT}/admin`);
    }
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  process.exit(1);
});